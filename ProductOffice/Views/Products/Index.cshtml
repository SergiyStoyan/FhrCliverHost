@model IEnumerable<Cliver.Fhr.ProductOffice.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>



<div id="GroupContent" style="display:none;" class="content-wrapper clear-fix">
    @*<a href="#" onclick="" class="button">Remove All</a>*@
    <table id="GroupTable" class="my" style="width:100%;">
        <thead>
            <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UpdateTime)
        </th>
        <th>
            Image
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            Category
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Sku)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Url)
        </th>
    </tr>
    </thead>
    </table>
</div>

<script>
    var GroupTable;
    var GroupDlg;

    function add_raw_to_group_dlg(row, clear) {
        if (!GroupDlg) {
            GroupDlg = show_dialog({
                adjust: false,
                dialog: {
                    modal: false,
                    title: "Product Group",
                    open: function () {
                        mark_grouped_rows_in_ProductsTable();
                    },
                    close: function () {
                        mark_grouped_rows_in_ProductsTable(false);
                    },
                    buttons: {
                        "Delete All": function () {
                            alert("TBD");
                        },
                        "Ungroup": function () {
                            if (GroupTable.$('tr.MainInGroup').length) {
                                GroupDlg.getContentByAjax(
                                    {
                                        type: 'GET',
                                        data: {
                                            //main_product_id: GroupTable.api().rows('.MainInGroup').data()[0][0],
                                            product_ids: $.map(GroupTable.api().rows().data(), function (cells) { return cells[0]; }),
                                        },
                                        //url: "@Url.Action("DeleteGroup")",
                                        url: "@Url.Action("Ungroup")",
                                    },
                                    function (data) {
                                        GroupTable.api().rows().remove().draw(false);
                                        mark_grouped_rows_in_ProductsTable();
                                    }
                                );
                            }
                        },
                        Save: function () {
                            var product_ids = $.map(GroupTable.api().rows().data(), function (cells) { return cells[0]; });
                            GroupDlg.getContentByAjax(
                                {
                                    type: 'GET',
                                    data: {
                                        product_ids: product_ids,
                                        main_product_id: GroupTable.api().rows('.MainInGroup').data()[0][0],
                                    },
                                    url: '@Url.Action("SaveGroup")'
                                },
                                function () {
                                    GroupTable.api().rows().remove();
                                    GroupDlg.dialog("close");
                                    ProductsTable.api().ajax.reload(null, false);
                                }
                            );
                        },
                        Hide: function () {
                            GroupDlg.dialog("close");
                        },
                    },
                },
                content_div_id: "GroupContent",
                background: '#e3e9e9',
            });
            GroupDlg.width($(window).width() - 50);
            GroupDlg.height($(window).height() / 4);
            GroupDlg.dialog({ position: { my: 'top', at: 'top', of: window, collision: 'fit' } });
            console.log($("#ProductsTable").width(), $(GroupDlg).width(), $("#GroupTable").width());
        }
        else
            GroupDlg.dialog("open");

        if (!GroupTable) {
            var definition_ = init_table(false);
            var definition =
            {
                table_id: "GroupTable",
                server: {
                    request_path: "@Request.Path",
                },
                datatable: {
                    columnDefs: [
                        {
                            visible: false,
                            //searchable: false,
                            targets: [0, -1]
                        },
                    ],
                    serverSide: false,
                    paging: false,
                    info: false,
                    searching: false,
                    //scrollX: '100%',
                    autoWidth: true,
                },
                menu: {
                    top: false,
                    right: false,
                    left: {
                        delete: true,
                        ungroup: {
                            text: "Remove",
                            onclick: function () {
                                GroupTable.api().row('.selected').remove().draw(false);
                                if (!GroupTable.$('tr.MainInGroup').length)
                                    GroupTable.$('tr:first()').addClass('MainInGroup');
                                mark_grouped_rows_in_ProductsTable();
                            },
                            style: "display:inline-block;margin-right:3px;",
                        },
                        main: {
                            text: "Main",
                            onclick: function () {
                                GroupTable.$('tr').removeClass('MainInGroup');
                                GroupTable.$('tr.selected').addClass('MainInGroup');
                                mark_grouped_rows_in_ProductsTable();
                            },
                            style: "display:inline-block;margin-right:3px;",
                        },
                        details: true,
                        edit: true,
                        site: {
                            text: "Site",
                            onclick: function () {
                                window.open($(definition._table.api().row('.selected').data()[6]).attr('href'), '_blank');
                            }
                        }
                    },
                    _templates: {
                        details: {
                            style: "display:inline-block;margin-right:3px;",
                        },
                        edit: {
                            style: "display:inline-block;margin-right:3px;",
                        },
                    },
                },
                on_row_clicked: function (event) {
                    definition_.on_row_clicked(event);

                    var table = definition._table;
                    if ($(event.target).parent('tr').hasClass('MainInGroup'))
                        $(table.menu.left).find("[name='main']").css('display', 'none');
                    else
                        $(table.menu.left).find("[name='main']").css('display', 'block');
                },
            };
            GroupTable = init_table(definition);
            //set environment for definition_.on_row_clicked
            definition_._table = GroupTable;
        }
        if (clear)
            GroupTable.api().rows().remove();

        var product_id = row.data()[0];

        var exists;
        GroupTable.api().rows().data().each(function (value, index) {
            if (value[0] == product_id) { exists = true; return; }
        });
        if (exists)
            return;

        GroupDlg.getContentByAjax(
            {
                type: 'GET',
                data: {
                    product_id: product_id,
                },
                url: '@Url.Action("GetGroup")'
            },
            function (products) {
                for (var i in products) {
                    var cs = products[i];
                    cs[2] = "<img src='" + cs[2].replace(/[\r\n].*/ig, "") + "'/>";
                    if (cs[6])
                        cs[6] = "<a href='" + cs[6] + "' target='_blank'>Site</a>";
                    GroupTable.api().row.add(cs);
                    GroupTable.$('tr:last()').addClass('Grouped');
                    if (!GroupTable.$('tr.MainInGroup').length)
                        GroupTable.$('tr:last()').addClass('MainInGroup');
                    GroupTable.api().columns.adjust().draw();
                }
                GroupTable.api().draw(false);
                mark_grouped_rows_in_ProductsTable();
            });
    }

    function mark_grouped_rows_in_ProductsTable(show) {
        $('#ProductsTable').find('tr').removeClass('Grouped');
        $('#ProductsTable').find('tr').removeClass('MainInGroup');
        if (show != undefined && !show) {
            return;
        }
        if (!GroupTable)
            return;
        var css = ProductsTable.api().rows().data();
        var gcss = GroupTable.api().rows().data();
        for (var j = gcss.length - 1; j >= 0; j--) {
            var p_id = gcss[j][0];
            for (i = css.length - 1; i >= 0; i--) {
                if (css[i][0] == p_id) {
                    $('#ProductsTable').find('tbody tr:eq(' + i + ')').addClass('Grouped');
                    if ($('#GroupTable').find('tbody tr:eq(' + j + ')').hasClass('MainInGroup'))
                        $('#ProductsTable').find('tbody tr:eq(' + i + ')').addClass('MainInGroup');
                }
            }
        }
    }
</script>





    <div id="filters" class="col-md-10"     style="display:inline-block;margin-right:30px;margin-left:30px;">
        Expand groups: <input id="ExpandGroups" type="checkbox" class = "form-control" onchange = "javascript:select_in_ProductsTable();" style = "display:inline-block;margin-right:30px;" />
        Filter by company: &nbsp; @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control", onchange = "javascript:$('#Category').html('');select_in_ProductsTable();fill_CategoryTreeView();", style = "display:inline-block;margin-right:30px;" })
        <div id="category_filter" style="display:inline-block;">
            Filter by <a href="#" onclick="javascript: show_CategoryTreeView();" style="display:inline-block;">category:</a>
            &nbsp; <a class="button" href="#" onclick='javascript: set_Category("");' style="display:inline-block;">X</a>
            <span id="Category" class="form-control" style="display:inline-block;margin-right:30px;" ></span>
        </div>
    </div>
<div id="CategoryTreeViewContent" style="display:none;"></div>
<link rel="stylesheet" href="https://static.jstree.com/3.2.1/assets/dist/themes/default/style.min.css" />
<script src="https://static.jstree.com/3.2.1/assets/dist/jstree.min.js"></script>
<script>
    $('#category_filter').hide();

    function set_Category(category) {
        if ($("#Category").html() == category)
            return;
        $("#Category").html(category);
        select_in_ProductsTable();
    }

    function show_CategoryTreeView() {
        if (!CategoryTreeView) {
            CategoryTreeView = show_dialog({
                title: "Picking Category...",
                content_div_id: "CategoryTreeViewContent",
                dialog: {
                    buttons: {
                        Close: function () { CategoryTreeView.close(); },
                    },
                    close: function () {
                        var node_id = $('#CategoryTreeViewContent').jstree("get_selected");
                        var path = $('#CategoryTreeViewContent').jstree(true).get_path(node_id, "@Html.Raw(ViewBag.CATEGORY_SEPARATOR)");
                        set_Category(path);
                    },
                },
            });
        }
        else
            CategoryTreeView.dialog("open");
    }

    function fill_CategoryTreeView() {
        $('#category_filter').hide();
        if ($("#CompanyId").val() < 0)
            return;
        $.ajax({
            type: 'GET',
            url: "@Url.Action("GetCompanyCategories")",
            data: {
                "company_id": $('#CompanyId').val(),
            },
            success:  function (category_tree) {
                function build_tree_view_from_tree(pn1, pn2_children) {
                    for (var name in pn1) {
                        var n2 = { text: name };
                        pn2_children.push(n2);
                        if (pn1[name]) {
                            n2.children = [];
                            build_tree_view_from_tree(pn1[name], n2.children);
                        }
                    }
                }
                var tree_view_json = [];
                build_tree_view_from_tree(category_tree, tree_view_json);
                $('#CategoryTreeViewContent').jstree({
                    core: {
                        data: tree_view_json
                    }
                });
                $('#category_filter').show();
            },
            error: function (xhr, error) {
                show_error("Could not get categories: " + xhr.responseText);
            }
        });
    }
    $('#CategoryTreeViewContent').on('select_node.jstree', function (e, data) {
        $('#CategoryTreeViewContent').jstree(true).toggle_node(data.node);
        //CategoryTreeView.close();
    })
    var CategoryTreeView;

    function select_in_ProductsTable() {
        ProductsTable.api().columns(1).search("ExpandGroups=" + $("#ExpandGroups").is(":checked"));//it is how filter parameters are passed due to to bad manual!
        var search = [];
        var ci = $("#CompanyId").val();
        if (ci > -1)
            search.push("CompanyId=" + ci);
        
        var ca = $("#Category").html();
        if (ca)
            search.push("Category LIKE " + ca + "%");

        ProductsTable.api().columns(0).search(search.join("|"));//it is how filter parameters are passed due to to bad manual!
        ProductsTable.api().draw();
    }
</script>

<table id="ProductsTable" class="my">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateTime)
            </th>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Category
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sku)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Url)
            </th>
        </tr>
    </thead>

</table>
<script type="text/javascript">
    var definition_ = init_table(false);
    var definition =
        {
            table_id: "ProductsTable",
            server: {
                request_path: "@Request.Path",
            },
            menu: {
                top: {
                    //start: { text: "Start Grouping", onclick: function () { alert("2"); } }
                },
                right: {
                    edit: false,
                    details: false,
                },
                left: {
                    edit: true,
                    details: true,
                    delete: false,
                    add2group: { text: "Add", onclick: function () { add_raw_to_group_dlg(ProductsTable.api().row('.selected')); } },
                    expand: { text: "Expand", onclick: function () { add_raw_to_group_dlg(ProductsTable.api().row('.selected'), true); } },                    
                    @*ungroup: {
                        text: "Ungroup",
                        onclick: function () {
                            ProductsTable.show_processing(true);
                            $.ajax({
                                type: 'GET',
                                url: "@Request.Path/DeleteGroup",
                                data: {
                                    main_product_id: ProductsTable.api().row('.selected').data()[0],
                                },
                                success: function (r) {
                                    ProductsTable.api().ajax.reload(null, false);
                                },
                                error: function (xhr, error) {
                                    show_error(xhr.responseText);
                                    ProductsTable.show_processing(false);
                                }
                            });
                        },
                    },*@
                    site: {
                        text: "Site",
                        onclick: function () {
                            window.open($(definition._table.api().row('.selected').data()[6]).attr('href'), '_blank');
                        }
                    },
                },
            },
            datatable: {
                columnDefs: [
                    {
                        visible: false,
                        //searchable: false,
                        targets: [0, -1]
                    },
                ],
                createdRow: function (row, cs, index) {
                    cs[2] = "<a href='#' onclick='javascript: show_product_image(this);'><img src='" + cs[2].replace(/[\r\n].*/ig, "") + "'/></a>";
                    if (cs[6])
                        cs[6] = "<a href='" + cs[6] + "' target='_blank'>Site</a>";
                    definition.on_row_filling(row, cs, index);
                },
                drawCallback: function (settings) {
                    mark_grouped_rows_in_ProductsTable();
                },
            },
            on_row_clicked: function (event) {
                definition_.on_row_clicked(event);

                var table = definition._table;
                var product_id = table.api().row($($(event.target).parent('tr')).index()).data()[0];
                //$(table.menu.left).find("[name='add2group'], [name='expand']").css('display', 'block');
                if (GroupDlg && GroupDlg.is_open()) {
                    $(table.menu.left).find("[name='expand']").css('display', 'none');
                    var added = false;
                    var d = GroupTable.api().rows().data();
                    for (i in d) {
                        if (d[i][0] == product_id) {
                            added = true;
                            break;
                        }
                    }
                    if (added)
                        $(table.menu.left).find("[name='add2group']").css('display', 'none');
                    else
                        $(table.menu.left).find("[name='add2group']").css('display', 'block');
                }
                else {
                    $(table.menu.left).find("[name='expand']").css('display', 'block');
                    $(table.menu.left).find("[name='add2group']").css('display', 'none');
                }
            }
        };
    var ProductsTable = init_table(definition);
    //set environment for definition_.on_row_clicked
    definition_._table = ProductsTable;
    ProductsTable.menu.top.append($("#filters"));
</script>

<div id="ProductImage" style="display:none;"></div>
<script>
    function show_product_image(e) {
        var d = $('<div>' + $(e).html() + '</div>');
        $("body").append(d);
        d.dialog({
           resizable: true,
           height: 'auto',
           width: 'auto',
           modal: true,
           show: {
               effect: "clip",
               duration: 300
           },
           hide: {
               effect: "fade",
               duration: 300
           },
           dialogClass: 'noTitleStuff',
           closeOnEscape: true,
           open: function (event, ui) {
           },
           close: function (event, ui) {
                   d.remove();
           },
        });
        d.bind('click', function () { d.remove(); });
        $('body').children('.ui-widget-overlay:last').bind('click', function () { d.remove(); });
        d.siblings('.ui-dialog-titlebar').css('display', 'none');
   }

</script>

