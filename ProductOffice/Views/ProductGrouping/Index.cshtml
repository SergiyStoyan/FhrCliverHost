@model IEnumerable<Cliver.ProductOffice.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>



<div id="GroupContent" style="display:none;">
    <a href="#" onclick="" class="button">Remove All</a>
    <table>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdateTime)
                </th>
                <th>
                    Image
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Sku)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Url)
                </th>
            </tr>
        </thead>
    </table>
</div>

<script>
    var GroupTable;
    var GroupDlg;

    function add_raw_to_group(row) {
        if (!GroupDlg)
            GroupDlg = show_ajax_modal_box("Product Group", { Save: function () { } }, "GroupContent");
        else
            GroupDlg.dialog("open");
        if (!GroupTable) {
            GroupTable = init_table({
                server: {
                    do_not_get_data: true,
                    request_path: "@Request.Path",
                    actions_prefix: null,
                },
                id_column_id: 0,
                invisible_column_ids: [0],
                rowCallback: "default_rowCallback",
                on_raw_clicked: null,
                menu: {
                    above: [
                    ],
                    left: [
                        { text: "X", onclick: "default_delete" },
                        { text: "Ungroup", onclick: function () { } }
                    ],
                    right: [
                        { text: "Details", onclick: "default_details" },
                        { text: "Edit", onclick: "default_edit" }
                    ]
                }
            });
        }

        console.log("row");
        console.log(row);
        var r = "<tr><td>" + row.join("</td><td>") + "</td></tr>";
        group_table.find("tbody").append(r);
    }
</script>





    <div class="col-md-10">
        Filter by company: &nbsp; @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control", onchange = "javascript:select_in_products_table('CompanyId',$(this).val());" })
    </div>
<table>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateTime)
            </th>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sku)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Url)
            </th>
        </tr>
    </thead>

</table>
<script type="text/javascript">
    var products_table = init_table({
        server: {
            request_path: "@Request.Path",
            actions_prefix: null,
        },
        id_column_id: 0,
        invisible_column_ids: [0],
        rowCallback: "default_rowCallback",
        on_raw_clicked: null,
        menu: {
            above: [
                { text: "Start Grouping", onclick: function () { alert("2"); } }
            ],
            left: [
                { text: "Add To Group", onclick: function () { add_raw_to_group(products_table.$('tr.selected')); } }
            ],
            right: [
                { text: "Details", onclick: "default_details" },
                { text: "Show Group", onclick: function () { alert("1"); } }
            ]
        }
    });

    function select_in_products_table(field, pattern) {
        if (pattern > -1)
            products_table.api().columns(0).search(field + "=" + pattern);//it is how filter parameters are passed due to to bad manual!
        else
            products_table.api().columns(0).search(null);//it is how filter parameters are passed due to to bad manual!
        products_table.api().draw();
    }

</script>


